@model Turn2.ViewModels.CombatViewModel

@{
    ViewData["Title"] = "Index";
    var queryPlayer = Model.ActorList.Where(a => a.IsPlayeble).Select(b => new { b.Hp, b.Atk, b }).Single();
    //var queryEnemy = Model.ActorList.Values.Where(a => !a.IsPlayeble);

    /*var hp = queryPlayer.Select(b => b.Hp);
    var atk = queryPlayer.Select(b => b.Atk);*/

    /*var ehp = queryEnemy.Select(b => b.Hp);
    var eatk = queryEnemy.Select(b => b.Atk);*/
}


<script src="~/js/jquery-3.3.1.min.js"></script>

<h1>Test</h1>

<p class="form-control">
    <span style="color: blue">Player</span> one has <span id="playerHp" style="color: green">@Html.DisplayFor(x => queryPlayer.Hp)</span>/<span id="totalHp"></span>
    HP and <span id="playerAtk">@Html.DisplayFor(x => queryPlayer.Atk)</span>
    Attack, @Html.DisplayFor(x => queryPlayer.b.Def) Defense and @Html.DisplayFor(x => queryPlayer.b.Agi) Agility
</p>
<br />
<div class="progress">
    <div id="playerBar" width="100%" style="background-color: green; height: 20px"></div>
</div>

@foreach (var data in Model.ActorList.Where(x => !x.IsPlayeble).Select(a => new { a.Hp, a.Atk, a.Name, a.Id, a }))
{
    <!---->
    <p class="form-control">
        <span style="color: orangered">@data.Name</span> has <span id="enemyHp-@data.Id" style="color: green">@Html.DisplayFor(x => data.Hp)</span>/<span id="totalEnemyHp-@data.Id"></span>
        HP and <span id="enemyAtk">@Html.DisplayFor(x => data.Atk) </span>
        Attack, @Html.DisplayFor(x => data.a.Def) Defense and @Html.DisplayFor(x => data.a.Agi) Agility
    </p>
    <br />
    <div class="progress">
        <div id="enemyBar-@data.Id" width="100%" style="background-color: green; height: 20px"></div>
    </div>
}

<h1>Go!</h1>

<span id="playerAction" style="color: blue"></span>
<br /><br />
<span id="enemyAction" style="color: red"></span>

@Html.DropDownList("SkillsDropdown", new SelectList(Model.SkillList.Select(x => x.Name)),
    "-- Select a Skill --", new { @class = "form-control", @style = "Width: 20%" })

@Html.DropDownList("SelectedEnemy", new SelectList(Model.ActorList.Where(x=> !x.IsPlayeble).Select(a=>a.Name)),
    "--Select an Eneny--", new { @class = "form-control", @style = "Width: 20%" })

<!--<span id="modelo"> @Html.Raw(Json.Serialize(Model)) </span>-->

<button id="boton" class="btn btn-primary" onclick="EngageVersionUno()" disabled>Engage</button>
<label id="lblRule"></label>

<script>

    var modelo =  @Html.Raw(Json.Serialize(Model));
    var playerHp = modelo.actorList[0].hp;

    $('#totalHp').html(playerHp);

    var enemyHps = ["" ,modelo.actorList[1].hp, modelo.actorList[2].hp];

    $(document).ready(function () {

        var dropDown = document.getElementById("SkillsDropdown");
        var dropDownTwo = document.getElementById("SelectedEnemy");

        $('#totalEnemyHp-1').html(enemyHps[1]);
        $('#totalEnemyHp-2').html(enemyHps[2]);

        dropDown.onchange = function () { DisplayValidationRule(this); };
        dropDownTwo.onchange = function () { DisplayValidationRule(this); };

        function DisplayValidationRule(ddl) {

            document.getElementById('lblRule').textContent = ddl.value;

            if ($('#SkillsDropdown').val() == "" || $('#SelectedEnemy').val() == "") {
                $('#boton').prop('disabled', true);
            } else {
                $('#boton').prop('disabled', false);
            }

            modelo.skill = $('#SkillsDropdown').val();
            modelo.selectedEnemy = $('#SelectedEnemy').val();
        }
    });

    function checkHp(data) {
        var i = 0;
        for (i; i <= 2; i++) {
            if (!data.actorList[i].isPlayeble) {
                if (data.actorList[i].hp <= (enemyHps[i] * 0.25)) {

                    document.getElementById("enemyHp-" + i).style.color = "red";
                    document.getElementById("enemyBar-" + i).style.backgroundColor = "red";
                    document.getElementById("enemyBar-" + i).style.width = data.actorList[i].hp + '%';


                } else if (data.actorList[i].hp <= (enemyHps[i] * 0.50)) {

                    document.getElementById("enemyHp-" + i).style.color = "orange";
                    document.getElementById("enemyBar-" + i).style.backgroundColor = "orange";
                    document.getElementById("enemyBar-" + i).style.width = data.actorList[i].hp + '%';

                } else if (data.actorList[i].hp >= (enemyHps[i] * 0.50)) {

                    document.getElementById("enemyHp-" + i).style.color = "green";
                    document.getElementById("enemyBar-" + i).style.width = data.actorList[i].hp + '%';

                }

                console.log(data.actorList[i].hp + " " + i + " " + enemyHps[i]);

            } else {

                if (data.actorList[1].hp <= (playerHp * 0.25)) {

                    document.getElementById("playerHp").style.color = "red";
                    document.getElementById("playerBar").style.backgroundColor = "red";
                    document.getElementById("playerBar").style.width = data.actorList[0].hp + '%';

                } else if (data.actorList[1].hp <= (playerHp * 0.50)) {

                    document.getElementById("playerHp").style.color = "orange";
                    document.getElementById("playerBar").style.backgroundColor = "orange";
                    document.getElementById("playerBar").style.width = data.actorList[0].hp + '%';

                } else {

                    document.getElementById("playerHp").style.color = "green";
                    document.getElementById("playerBar").style.width = data.actorList[0].hp + '%';
                }

                console.log(data.actorList[i].hp + " " + i + " " + enemyHps[i]);
            }
        }
    }

    function EngageVersionUno()
    {
        $.post("Game/EngageVersionUno", modelo).done(
        function (data) {

            data.skill = $('#SkillsDropdown').val();

            checkHp(data);

            $("#playerHp").html(data.actorList[0].hp);

            $("#enemyHp-1").html(data.actorList[1].hp);

            $("#enemyHp-2").html(data.actorList[2].hp);

            $("#playerAtk").html(data.actorList[0].atk);

            $("#enemyAtk").html(data.actorList[1].atk);


            $("#enemyAction").html(data.messages.pop() + "<br/> " + data.messages.pop());

            $("#playerAction").html(data.messages.pop());

            modelo = data;
        });
    }
</script>